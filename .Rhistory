return(new_rows)
}
interpolate_trend(gginput)
interpolate_trend <- function(gginput) {
key_rows = gginput[trend_seg!=shift(trend_seg) | trend_seg!=shift(trend_seg,-1)]
new_rows = key_rows[, .(Date = mean(Date), Smoothed = mean(Smoothed)),by = rep(seq(1, 52, 2), each = 2)]
#new_rows[,`:=`(trend_seg=key_rows$trend_seg, Confirmed=NA, deriv_trend=key_rows$deriv_trend)]
return(new_rows)
}
interpolate_trend(gginput)
k
k = interpolate_trend(gginput)
k
k[rep(.I,2)]
k[rep(1:.N,2)]
k[rep(1:.N,each=2)]
interpolate_trend <- function(gginput) {
key_rows = gginput[trend_seg!=shift(trend_seg) | trend_seg!=shift(trend_seg,-1)]
new_rows = key_rows[, .(Date = mean(Date), Smoothed = mean(Smoothed)),by = rep(seq(1, 52, 2), each = 2)]
new_rows = new_rows[rep(1:.N,each=2)]
new_rows[,`:=`(trend_seg=key_rows$trend_seg, Confirmed=NA, deriv_trend=key_rows$deriv_trend)]
return(new_rows)
}
k = interpolate_trend(gginput)
k
k
interpolate_trend <- function(gginput) {
key_rows = gginput[trend_seg!=shift(trend_seg) | trend_seg!=shift(trend_seg,-1)]
new_rows = key_rows[, .(Date = mean(Date), Smoothed = mean(Smoothed)),by = rep(seq(1, 52, 2), each = 2)]
new_rows = new_rows[rep(1:.N,each=2)]
new_rows[,`:=`(trend_seg=key_rows$trend_seg, Confirmed=NA, deriv_trend=key_rows$deriv_trend, rep=NULL)]
return(new_rows)
}
interpolate_trend(gginput)
interpolate_trend(gginput)[]
plot_trend_line <- function(data) {
new_rows = interpolate_trend(data)
trend_names = unique(data[["deriv_trend"]])
trend_colors = list("red","orange","green")
names(trend_colors) = trend_names
legend_on = data[data[, .I[1], by=deriv_trend]$V1,trend_seg]
#return(trend_colors)
p <- plot_ly(type="scatter", mode="lines")
for(trend_val in seq(1,data[,max(trend_seg)])) {
trend_name = unique(data[trend_seg==trend_val, deriv_trend])
color = trend_colors[[trend_name]]
p <- p %>%
add_trace(data=data[trend_seg==trend_val],
x=~Date,
y=~Smoothed,
mode="lines",
type="scatter",
name=trend_name,
legendgroup = trend_name,
showlegend = trend_val %in% legend_on,
line=list(color=color, width=4)
)
}
p <- p %>%
add_trace(data=data[Confirmed>=0],
x=~Date,
y=~Confirmed,
name="Observed",
mode="markers",
marker=list(color="black", opacity=0.3)) %>%
layout(legend=list(orientation='h'))
return(p)
}
interpolate_trend <- function(gginput) {
key_rows = gginput[trend_seg!=shift(trend_seg) | trend_seg!=shift(trend_seg,-1)]
new_rows = key_rows[, .(Date = mean(Date), Smoothed = mean(Smoothed)),by = rep(seq(1, 52, 2), each = 2)]
new_rows = new_rows[rep(1:.N,each=2)]
new_rows[,`:=`(trend_seg=key_rows$trend_seg, Confirmed=NA, deriv_trend=key_rows$deriv_trend, rep=NULL)]
return(new_rows)
}
plot_trend_line(gginput[, .(Date, Smoothed, Confirmed, deriv_trend, trend_seg)])
plot_trend_line <- function(data) {
new_rows = interpolate_trend(data)
data <- rbind(data,new_rows)
trend_names = unique(data[["deriv_trend"]])
trend_colors = list("red","orange","green")
names(trend_colors) = trend_names
legend_on = data[data[, .I[1], by=deriv_trend]$V1,trend_seg]
#return(trend_colors)
p <- plot_ly(type="scatter", mode="lines")
for(trend_val in seq(1,data[,max(trend_seg)])) {
trend_name = unique(data[trend_seg==trend_val, deriv_trend])
color = trend_colors[[trend_name]]
p <- p %>%
add_trace(data=data[trend_seg==trend_val],
x=~Date,
y=~Smoothed,
mode="lines",
type="scatter",
name=trend_name,
legendgroup = trend_name,
showlegend = trend_val %in% legend_on,
line=list(color=color, width=4)
)
}
p <- p %>%
add_trace(data=data[Confirmed>=0],
x=~Date,
y=~Confirmed,
name="Observed",
mode="markers",
marker=list(color="black", opacity=0.3)) %>%
layout(legend=list(orientation='h'))
return(p)
}
interpolate_trend <- function(gginput) {
key_rows = gginput[trend_seg!=shift(trend_seg) | trend_seg!=shift(trend_seg,-1)]
new_rows = key_rows[, .(Date = mean(Date), Smoothed = mean(Smoothed)),by = rep(seq(1, 52, 2), each = 2)]
new_rows = new_rows[rep(1:.N,each=2)]
new_rows[,`:=`(trend_seg=key_rows$trend_seg, Confirmed=NA, deriv_trend=key_rows$deriv_trend, rep=NULL)]
return(new_rows)
}
plot_trend_line(gginput[, .(Date, Smoothed, Confirmed, deriv_trend, trend_seg)])
plot_trend_line <- function(data) {
new_rows = interpolate_trend(data)
data <- rbind(data,new_rows)[order(trend_seg,Date)]
trend_names = unique(data[["deriv_trend"]])
trend_colors = list("red","orange","green")
names(trend_colors) = trend_names
legend_on = data[data[, .I[1], by=deriv_trend]$V1,trend_seg]
#return(trend_colors)
p <- plot_ly(type="scatter", mode="lines")
for(trend_val in seq(1,data[,max(trend_seg)])) {
trend_name = unique(data[trend_seg==trend_val, deriv_trend])
color = trend_colors[[trend_name]]
p <- p %>%
add_trace(data=data[trend_seg==trend_val],
x=~Date,
y=~Smoothed,
mode="lines",
type="scatter",
name=trend_name,
legendgroup = trend_name,
showlegend = trend_val %in% legend_on,
line=list(color=color, width=4)
)
}
p <- p %>%
add_trace(data=data[Confirmed>=0],
x=~Date,
y=~Confirmed,
name="Observed",
mode="markers",
marker=list(color="black", opacity=0.3)) %>%
layout(legend=list(orientation='h'))
return(p)
}
interpolate_trend <- function(gginput) {
key_rows = gginput[trend_seg!=shift(trend_seg) | trend_seg!=shift(trend_seg,-1)]
new_rows = key_rows[, .(Date = mean(Date), Smoothed = mean(Smoothed)),by = rep(seq(1, 52, 2), each = 2)]
new_rows = new_rows[rep(1:.N,each=2)]
new_rows[,`:=`(trend_seg=key_rows$trend_seg, Confirmed=NA, deriv_trend=key_rows$deriv_trend, rep=NULL)]
return(new_rows)
}
plot_trend_line(gginput[, .(Date, Smoothed, Confirmed, deriv_trend, trend_seg)])
plot_trend_markers(gginput, "deriv_trend")
plot_trend_line <- function(data, interpolate=T) {
if(interpolate) {
new_rows = interpolate_trend(data)
data <- rbind(data,new_rows)[order(trend_seg,Date)]
}
trend_names = unique(data[["deriv_trend"]])
trend_colors = list("red","orange","green")
names(trend_colors) = trend_names
legend_on = data[data[, .I[1], by=deriv_trend]$V1,trend_seg]
#return(trend_colors)
p <- plot_ly(type="scatter", mode="lines")
for(trend_val in seq(1,data[,max(trend_seg)])) {
trend_name = unique(data[trend_seg==trend_val, deriv_trend])
color = trend_colors[[trend_name]]
p <- p %>%
add_trace(data=data[trend_seg==trend_val],
x=~Date,
y=~Smoothed,
mode="lines",
type="scatter",
name=trend_name,
legendgroup = trend_name,
showlegend = trend_val %in% legend_on,
line=list(color=color, width=4)
)
}
p <- p %>%
add_trace(data=data[Confirmed>=0],
x=~Date,
y=~Confirmed,
name="Observed",
mode="markers",
marker=list(color="black", opacity=0.3)) %>%
layout(legend=list(orientation='h'))
return(p)
}
interpolate_trend <- function(gginput) {
key_rows = gginput[trend_seg!=shift(trend_seg) | trend_seg!=shift(trend_seg,-1)]
new_rows = key_rows[, .(Date = mean(Date), Smoothed = mean(Smoothed)),by = rep(seq(1, 52, 2), each = 2)]
new_rows = new_rows[rep(1:.N,each=2)]
new_rows[,`:=`(trend_seg=key_rows$trend_seg, Confirmed=NA, deriv_trend=key_rows$deriv_trend, rep=NULL)]
return(new_rows)
}
plot_trend_line(gginput[, .(Date, Smoothed, Confirmed, deriv_trend, trend_seg)])
gginput
plot_trend_line(gginput[, .(Date, Smoothed, Confirmed, deriv_trend, trend_seg)], interpolate = F)
system.time(plot_trend_line(gginput[, .(Date, Smoothed, Confirmed, deriv_trend, trend_seg)], interpolate = F))
system.time(plot_trend_line(gginput[, .(Date, Smoothed, Confirmed, deriv_trend, trend_seg)], interpolate = T))
microbenchmark::microbenchmark(interpolate_trend(gginput))
plot_trend_line(gginput[, .(Date, Smoothed, Confirmed, deriv_trend, trend_seg)], interpolate = T)
inputs = list(county = "Baltimore County", "zip" = NULL, outcome="Confirmed", knot_interval = 21, dist="poisson")
gginput <- get_locale_data(inputs, df)[]
gginput[, trend_seg:=rleid(deriv_trend)]
plot_trend_line(gginput[, .(Date, Smoothed, Confirmed, deriv_trend, trend_seg)])
plot_trend_line(gginput[, .(Date, Smoothed, Confirmed, deriv_trend, trend_seg)])
plot_trend_line <- function(data, interpolate=T) {
if(interpolate) {
new_rows = interpolate_trend(data)
data <- rbind(data,new_rows)[order(trend_seg,Date)]
}
trend_names = unique(data[["deriv_trend"]])
trend_colors = list("red","orange","green")
names(trend_colors) = trend_names
legend_on = data[data[, .I[1], by=deriv_trend]$V1,trend_seg]
return(legend_on)
p <- plot_ly(type="scatter", mode="lines")
for(trend_val in seq(1,data[,max(trend_seg)])) {
trend_name = unique(data[trend_seg==trend_val, deriv_trend])
color = trend_colors[[trend_name]]
p <- p %>%
add_trace(data=data[trend_seg==trend_val],
x=~Date,
y=~Smoothed,
mode="lines",
type="scatter",
name=trend_name,
legendgroup = trend_name,
showlegend = trend_val %in% legend_on,
line=list(color=color, width=4)
)
}
p <- p %>%
add_trace(data=data[Confirmed>=0],
x=~Date,
y=~Confirmed,
name="Observed",
mode="markers",
marker=list(color="black", opacity=0.3)) %>%
layout(legend=list(orientation='h'))
return(p)
}
plot_trend_line(gginput[, .(Date, Smoothed, Confirmed, deriv_trend, trend_seg)])
plot_trend_line <- function(data, interpolate=T) {
if(interpolate) {
new_rows = interpolate_trend(data)
data <- rbind(data,new_rows)[order(trend_seg,Date)]
}
trend_names = unique(data[["deriv_trend"]])
trend_colors = list("red","orange","green")
names(trend_colors) = trend_names
legend_on = data[data[, .I[1], by=deriv_trend]$V1,trend_seg]
#return(legend_on)
p <- plot_ly(type="scatter", mode="lines")
for(trend_val in seq(1,data[,max(trend_seg)])) {
trend_name = unique(data[trend_seg==trend_val, deriv_trend])
color = trend_colors[[trend_name]]
p <- p %>%
add_trace(data=data[trend_seg==trend_val],
x=~Date,
y=~Smoothed,
mode="lines",
type="scatter",
name=trend_name,
#legendgroup = trend_name,
legend_group = "Trend",
showlegend = trend_val %in% legend_on,
line=list(color=color, width=4)
)
}
p <- p %>%
add_trace(data=data[Confirmed>=0],
x=~Date,
y=~Confirmed,
name="Observed",
mode="markers",
marker=list(color="black", opacity=0.3)) %>%
layout(legend=list(orientation='h'))
return(p)
}
plot_trend_line(gginput[, .(Date, Smoothed, Confirmed, deriv_trend, trend_seg)])
warnings()
plot_trend_line <- function(data, interpolate=T) {
if(interpolate) {
new_rows = interpolate_trend(data)
data <- rbind(data,new_rows)[order(trend_seg,Date)]
}
trend_names = unique(data[["deriv_trend"]])
trend_colors = list("red","orange","green")
names(trend_colors) = trend_names
legend_on = data[data[, .I[1], by=deriv_trend]$V1,trend_seg]
#return(legend_on)
p <- plot_ly(type="scatter", mode="lines")
for(trend_val in seq(1,data[,max(trend_seg)])) {
trend_name = unique(data[trend_seg==trend_val, deriv_trend])
color = trend_colors[[trend_name]]
p <- p %>%
add_trace(data=data[trend_seg==trend_val],
x=~Date,
y=~Smoothed,
mode="lines",
type="scatter",
name=trend_name,
#legendgroup = trend_name,
legendgroup = "Trend",
showlegend = trend_val %in% legend_on,
line=list(color=color, width=4)
)
}
p <- p %>%
add_trace(data=data[Confirmed>=0],
x=~Date,
y=~Confirmed,
name="Observed",
mode="markers",
marker=list(color="black", opacity=0.3)) %>%
layout(legend=list(orientation='h'))
return(p)
}
plot_trend_line(gginput[, .(Date, Smoothed, Confirmed, deriv_trend, trend_seg)])
plot_trend_line <- function(data, interpolate=T) {
if(interpolate) {
new_rows = interpolate_trend(data)
data <- rbind(data,new_rows)[order(trend_seg,Date)]
}
trend_names = unique(data[["deriv_trend"]])
trend_colors = list("red","orange","green")
names(trend_colors) = trend_names
legend_on = data[data[, .I[1], by=deriv_trend]$V1,trend_seg]
#return(legend_on)
p <- plot_ly(type="scatter", mode="lines")
for(trend_val in seq(1,data[,max(trend_seg)])) {
trend_name = unique(data[trend_seg==trend_val, deriv_trend])
color = trend_colors[[trend_name]]
p <- p %>%
add_trace(data=data[trend_seg==trend_val],
x=~Date,
y=~Smoothed,
mode="lines",
type="scatter",
name=trend_name,
#legendgroup = trend_name,
legendgroup = "Trend",
legendgroup_title= "Trend",
showlegend = trend_val %in% legend_on,
line=list(color=color, width=4)
)
}
p <- p %>%
add_trace(data=data[Confirmed>=0],
x=~Date,
y=~Confirmed,
name="Observed",
mode="markers",
marker=list(color="black", opacity=0.3)) %>%
layout(legend=list(orientation='h'))
return(p)
}
plot_trend_line(gginput[, .(Date, Smoothed, Confirmed, deriv_trend, trend_seg)])
plot_trend_line <- function(data, interpolate=T) {
if(interpolate) {
new_rows = interpolate_trend(data)
data <- rbind(data,new_rows)[order(trend_seg,Date)]
}
trend_names = unique(data[["deriv_trend"]])
trend_colors = list("red","orange","green")
names(trend_colors) = trend_names
legend_on = data[data[, .I[1], by=deriv_trend]$V1,trend_seg]
#return(legend_on)
p <- plot_ly(type="scatter", mode="lines")
for(trend_val in seq(1,data[,max(trend_seg)])) {
trend_name = unique(data[trend_seg==trend_val, deriv_trend])
color = trend_colors[[trend_name]]
p <- p %>%
add_trace(data=data[trend_seg==trend_val],
x=~Date,
y=~Smoothed,
mode="lines",
type="scatter",
name=trend_name,
#legendgroup = trend_name,
legendgroup = "Trend",
legendgrouptitle_text= "Trend",
showlegend = trend_val %in% legend_on,
line=list(color=color, width=4)
)
}
p <- p %>%
add_trace(data=data[Confirmed>=0],
x=~Date,
y=~Confirmed,
name="Observed",
mode="markers",
marker=list(color="black", opacity=0.3)) %>%
layout(legend=list(orientation='h'))
return(p)
}
plot_trend_line(gginput[, .(Date, Smoothed, Confirmed, deriv_trend, trend_seg)])
warnings()
plot_trend_line <- function(data, interpolate=T) {
if(interpolate) {
new_rows = interpolate_trend(data)
data <- rbind(data,new_rows)[order(trend_seg,Date)]
}
trend_names = unique(data[["deriv_trend"]])
trend_colors = list("red","orange","green")
names(trend_colors) = trend_names
legend_on = data[data[, .I[1], by=deriv_trend]$V1,trend_seg]
#return(legend_on)
p <- plot_ly(type="scatter", mode="lines")
for(trend_val in seq(1,data[,max(trend_seg)])) {
trend_name = unique(data[trend_seg==trend_val, deriv_trend])
color = trend_colors[[trend_name]]
p <- p %>%
add_trace(data=data[trend_seg==trend_val],
x=~Date,
y=~Smoothed,
mode="lines",
type="scatter",
name=trend_name,
#legendgroup = trend_name,
legendgroup = "Trend",
legendgrouptitle= "Trend",
showlegend = trend_val %in% legend_on,
line=list(color=color, width=4)
)
}
p <- p %>%
add_trace(data=data[Confirmed>=0],
x=~Date,
y=~Confirmed,
name="Observed",
mode="markers",
marker=list(color="black", opacity=0.3)) %>%
layout(legend=list(orientation='h'))
return(p)
}
plot_trend_line(gginput[, .(Date, Smoothed, Confirmed, deriv_trend, trend_seg)])
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
inputs = list(county = "Carroll County", "zip" = NULL, outcome="Confirmed", knot_interval = 21, dist="poisson")
gginput <- get_locale_data(inputs, df)[]
plot_trend_line <- function(data, interpolate=T) {
data[, trend_seg:=rleid(deriv_trend)]
if(interpolate) {
new_rows = interpolate_trend(data)
data <- rbind(data,new_rows,fill=TRUE)[order(trend_seg,Date)]
}
print(data[1:6])
trend_names = unique(data[["deriv_trend"]])
trend_colors = list("red","orange","green")
names(trend_colors) = trend_names
legend_on = data[data[, .I[1], by=deriv_trend]$V1,trend_seg]
#return(legend_on)
p <- plot_ly(type="scatter", mode="lines")
for(trend_val in seq(1,data[,max(trend_seg)])) {
trend_name = unique(data[trend_seg==trend_val, deriv_trend])
color = trend_colors[[trend_name]]
p <- p %>%
add_trace(data=data[trend_seg==trend_val],
x=~Date,
y=~Smoothed,
mode="lines",
type="scatter",
name=trend_name,
#legendgroup = trend_name,
legendgroup = "Trend",
legendgrouptitle= "Trend",
showlegend = trend_val %in% legend_on,
line=list(color=color, width=4)
)
}
p <- p %>%
add_trace(data=data[Confirmed>=0],
x=~Date,
y=~Confirmed,
name="Observed",
mode="markers",
marker=list(color="black", opacity=0.3)) %>%
layout(legend=list(orientation='h'))
return(p)
}
interpolate_trend <- function(gginput) {
key_rows = gginput[trend_seg!=shift(trend_seg) | trend_seg!=shift(trend_seg,-1)]
new_rows = key_rows[, .(Date = mean(Date), Smoothed = mean(Smoothed)),by = rep(seq(1, nrow(key_rows), 2), each = 2)]
new_rows = new_rows[rep(1:.N,each=2)]
new_rows[,`:=`(trend_seg=key_rows$trend_seg, Confirmed=NA, deriv_trend=key_rows$deriv_trend, rep=NULL)]
return(new_rows)
}
plot_trend_line(gginput[, .(Date, Smoothed, Confirmed, deriv_trend, trend_seg)])
plot_trend_line(gginput)
gginput[, trend_seg:=rleid(deriv_trend)]
#plot_trend_line(gginput)
interpolate_trend(gginput)
key_rows = gginput[trend_seg!=shift(trend_seg) | trend_seg!=shift(trend_seg,-1)]
key_rows
